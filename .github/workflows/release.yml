name: publish

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
    paths:
      - "setup.py"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Extract package version
        id: get_version
        run: |
          VERSION=$(python -c "import pathlib, re; text=pathlib.Path('setup.py').read_text(encoding='utf-8'); m=re.search(r'version\\s*=\\s*[\\x27\\x22]([^\\x27\\x22]+)[\\x27\\x22]', text); print(m.group(1))")
          echo "PACKAGE_VERSION=$VERSION" >> $GITHUB_ENV
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install build & twine
        run: |
          python -m pip install --upgrade pip
          python -m pip install build twine

      - name: Build dists
        run: python -m build

      - name: Twine check
        run: python -m twine check dist/*

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload --skip-existing dist/*

      - name: Determine tag name
        id: set_tag
        run: |
          if [[ "$GITHUB_REF" == refs/tags/* ]]; then
            echo "tag_name=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag_name=v${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.set_tag.outputs.tag_name }}
          target_commitish: ${{ github.sha }}
          generate_release_notes: true
          files: |
            dist/*